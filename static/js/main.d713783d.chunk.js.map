{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d713783d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand\" to=\"/\">\r\n                    {props.title}\r\n                </Link> */}\r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                    {props.title}\r\n                </a>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                                Home\r\n                            </a>\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                                Home\r\n                            </Link> */}\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            {/* <a className=\"nav-link\" href=\"/\">\r\n                                {props.aboutText}\r\n                            </a> */}\r\n                            {/* <Link className=\"nav-link\" to=\"/about\">\r\n                                {props.aboutText}\r\n                            </Link> */}\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input\r\n                            className=\"form-control me-2\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            aria-label=\"Search\"\r\n                        />\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                            Search\r\n                        </button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set title here\",\r\n    aboutText: \"About\"\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=> {\r\n        // console.log(\"Uppercase was clicked \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n    const handleLoClick = ()=> {\r\n        // console.log(\"lowercase was clicked \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n    const handleClearClick = ()=> {\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text removes from your field\", \"warning\");\r\n    }\r\n    const handleCopy = ()=> {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied to your clipboard\", \"success\");\r\n    }\r\n    const handleExtraSpaces = ()=> {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed successfully\", \"success\");\r\n    }\r\n\r\n    const handleOnChange= (event)=> {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // const [text, setText] = useState('Enter text here');\r\n    // text = \"new text\"; // Wrong way to change state\r\n    // setText(\"new text\"); // Correct way to change state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode === 'light'?'#042743':'white'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" style={{backgroundColor: props.mode === 'dark'?'grey':'white', color: props.mode === 'light'?'#042743':'white'}} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"5\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n            <button className=\"btn btn-secondary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode === 'light'?'#042743':'white'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in above textbox to preview it here.\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=> {\r\n        const lower= word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}!</strong> {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Dark mode has been enabled', 'success');\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtils is amazing\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils now\";\n      // }, 1500);\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled', 'success');\n    }\n  }\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About Us\"/> */}\n      {/* <Navbar /> */}\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n            </Route>\n          </Switch> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n          {/* <About /> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}